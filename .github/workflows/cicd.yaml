---
name: CI/CD

on:
  push:
    branches: ['**']
    paths-ignore:
      - '**/*.md'

env:
  IMAGE_NAME: bpapp-be
  IMAGE_REGISTRY: bpcalc.azurecr.io

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install poetry
        run: pipx install poetry==1.2.2

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'poetry'

      - name: Install dependencies
        run: poetry install
      
      - name: Run linter
        run: poetry run flake8 .
      
      - name: Run unit tests
        run: |
          poetry run coverage run --source=bpcalc -m pytest tests/unit
          poetry run coverage report --fail-under=80
    
  check:
    name: Check requirements
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.8.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          security-checks: vuln,secret,config

  image:
    name: Build container image
    needs: [ build ]
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.get_tag.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Azure docker login
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.IMAGE_REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      
      - name: Get image metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}},enable={{is_default_branch}}
            type=semver,pattern={{major}}.{{minor}},enable={{is_default_branch}}
            type=semver,pattern={{major}},enable={{is_default_branch}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha
            type=ref,event=pr
          flavor: |
            latest=false
      
      - name: Container image build
        id: build
        uses: docker/build-push-action@v4
        with:
          push: ${{ (github.event_name == 'pull_request') || (github.ref_name == 'main') }}
          platforms: linux/amd64
          context: .
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
      
      - name: Get sha tag
        id: get_tag
        run: |
          TAG=$(jq -r '."image.name" | scan("sha-[a-z0-9]+")' <<< '${{ steps.build.outputs.metadata }}')
          echo "tag=$TAG" >> $GITHUB_OUTPUT
  
  deploy:
    name: Invoke deployment
    needs: [ image ]
    runs-on: ubuntu-latest
    steps:
      - name: Invoke workflow in another repo with inputs
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: invoke-deployment.yaml
          repo: benchoncy/devops-masters-eadeployment-ca2-env
          inputs: '{ "tag": "${{ needs.image.outputs.tag }}", "service_name": "bpcalc-be" }'